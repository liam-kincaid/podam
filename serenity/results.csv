"Story","Title","Result","Date","Stability","Duration (s)"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method heavy comparator","SUCCESS","2023-07-29T17:16:35.039+03:00","0.0","0.1"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method light comparator","SUCCESS","2023-07-29T17:16:35.255+03:00","0.0","0.12"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor heavy comparator","SUCCESS","2023-07-29T17:16:34.879+03:00","0.0","0.16"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor light comparator","SUCCESS","2023-07-29T17:16:35.143+03:00","0.0","0.11"
"Memoization test","Even when memoization is true, if generics Pojos have different types, objects should not be equal","SUCCESS","2023-07-29T17:16:40.416+03:00","0.0","0.11"
"Class info test","In Presence of excluded attributes, the Class Info object should not contain those attributes","SUCCESS","2023-07-29T17:16:29.102+03:00","0.0","0.13"
"Abnormal pojos test","Invoking Podam on a POJO with a circular constructor (e.g. java.net.URL) leads to a null POJO","SUCCESS","2023-07-29T17:16:35.829+03:00","0.0","0.13"
"Abnormal pojos test","Invoking Podam on a POJO with a private, no arguments constructor, should return a non null POJO","SUCCESS","2023-07-29T17:16:35.719+03:00","0.0","0.11"
"Abnormal pojos test","Invoking Podam on a POJO with both circular and non circular constructors (e.g. javax.activation.DataHandler) should lead to a non empty POJO","SUCCESS","2023-07-29T17:16:36.887+03:00","0.0","0.12"
"Podam factory basic types test","Invoking Podam on an Abstract class should return a null pojo","SUCCESS","2023-07-29T17:16:26.813+03:00","0.0","0.13"
"Podam factory basic types test","Invoking Podam on an interface should return an empty POJO","SUCCESS","2023-07-29T17:16:26.447+03:00","0.0","0.11"
"Memoization test","Memoization should work correctly for collections and arrays","SUCCESS","2023-07-29T17:16:40.081+03:00","0.0","0.12"
"Memoization test","Memoization should work for recursive Pojos","SUCCESS","2023-07-29T17:16:40.201+03:00","0.0","0.11"
"Memoization test","Memoization should work with Generics","SUCCESS","2023-07-29T17:16:40.309+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a Byte wrapped value","SUCCESS","2023-07-29T17:16:41.959+03:00","0.0","0.1"
"Type manufacturing test","Podam Messaging System should return a Character wrapped value","SUCCESS","2023-07-29T17:16:42.491+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a Double wrapped value","SUCCESS","2023-07-29T17:16:42.819+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a Float wrapped value","SUCCESS","2023-07-29T17:16:40.831+03:00","0.0","0.12"
"Type manufacturing test","Podam Messaging System should return a Long wrapped value","SUCCESS","2023-07-29T17:16:41.189+03:00","0.0","0.12"
"Type manufacturing test","Podam Messaging System should return a Short wrapped value","SUCCESS","2023-07-29T17:16:42.269+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a String value","SUCCESS","2023-07-29T17:16:42.062+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a boolean primitive value","SUCCESS","2023-07-29T17:16:42.714+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a boolean wrapped value","SUCCESS","2023-07-29T17:16:41.643+03:00","0.0","0.1"
"Type manufacturing test","Podam Messaging System should return a byte primitive value","SUCCESS","2023-07-29T17:16:41.533+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a char primitive value","SUCCESS","2023-07-29T17:16:41.747+03:00","0.0","0.21"
"Type manufacturing test","Podam Messaging System should return a double primitive value","SUCCESS","2023-07-29T17:16:42.603+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a float primitive value","SUCCESS","2023-07-29T17:16:42.379+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a long primitive value","SUCCESS","2023-07-29T17:16:41.310+03:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a short primitive value","SUCCESS","2023-07-29T17:16:40.954+03:00","0.0","0.12"
"Type manufacturing test","Podam Messaging System should return an Enum value","SUCCESS","2023-07-29T17:16:41.069+03:00","0.0","0.12"
"Type manufacturing test","Podam Messaging System should return an int primitive value","SUCCESS","2023-07-29T17:16:42.169+03:00","0.0","0.1"
"Type manufacturing test","Podam Messaging System should return an integer value","SUCCESS","2023-07-29T17:16:41.421+03:00","0.0","0.11"
"External factory unit test","Podam cannot fill interface attributes if the external factory does not manufacture the right type","SUCCESS","2023-07-29T17:16:38.274+03:00","0.0","0.21"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces","SUCCESS","2023-07-29T17:16:39.614+03:00","0.0","0.12"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces which extend Map","SUCCESS","2023-07-29T17:16:39.366+03:00","0.0","0.13"
"Validated pojo test","Podam should allow validation annotations customization","SUCCESS","2023-07-29T17:16:43.329+03:00","0.0","0.12"
"Annotations test","Podam should assign exactly the values specified with the @Email annotation","SUCCESS","2023-07-29T17:16:22.621+03:00","0.0","0.11"
"Annotations test","Podam should assign exactly the values specified with the @PodamStrategyValue annotation","SUCCESS","2023-07-29T17:16:21.411+03:00","0.0","0.2"
"Annotations test","Podam should assign precise values and lengths when a String is annotated with @PodamStringValue","SUCCESS","2023-07-29T17:16:22.729+03:00","0.0","0.12"
"Factory unit test","Podam should be able to create an abstract class with help of factory","SUCCESS","2023-07-29T17:16:38.724+03:00","0.0","0.13"
"Collections test","Podam should be able to create instances of Concurrent Hash Maps with interface values","SUCCESS","2023-07-29T17:16:30.145+03:00","0.0","0.12"
"Collections test","Podam should be able to create instances of Hash Maps with interface values","SUCCESS","2023-07-29T17:16:30.653+03:00","0.0","0.12"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2023-07-29T17:16:33.912+03:00","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2023-07-29T17:16:31.442+03:00","0.0","0.12"
"Collections test","Podam should be able to create instances of Sorted Maps with interface values","SUCCESS","2023-07-29T17:16:29.517+03:00","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2023-07-29T17:16:33.595+03:00","0.0","0.1"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2023-07-29T17:16:32.325+03:00","0.0","0.14"
"Constructors unit test","Podam should be able to create instances of generic read only POJOs with factory methods when the concrete type is known","SUCCESS","2023-07-29T17:16:33.229+03:00","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2023-07-29T17:16:31.684+03:00","0.0","0.13"
"Collections test","Podam should be able to fill in POJOs with JsonNullable collection wrapper","SUCCESS","2023-07-29T17:16:30.385+03:00","0.0","0.14"
"Collections test","Podam should be able to fill in POJOs with raw type collection attributes and default values to Object","SUCCESS","2023-07-29T17:16:29.387+03:00","0.0","0.13"
"Class info test","Podam should be able to find attributes with pattern [a-z][0-9]","SUCCESS","2023-07-29T17:16:28.973+03:00","0.0","0.13"
"Class info test","Podam should be able to find non-standard attributes with a custom class info strategy","SUCCESS","2023-07-29T17:16:28.686+03:00","0.0","0.15"
"Validated pojo test","Podam should be able to fulfill most of the javax Validation 2.0 framework","SUCCESS","2023-07-29T17:16:43.864+03:00","0.0","0.11"
"Validated pojo test","Podam should be able to fulfill most of the javax Validation framework","SUCCESS","2023-07-29T17:16:43.559+03:00","0.0","0.18"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2023-07-29T17:16:31.337+03:00","0.0","0.11"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2023-07-29T17:16:33.339+03:00","0.0","0.13"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2023-07-29T17:16:31.811+03:00","0.0","0.11"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2023-07-29T17:16:31.559+03:00","0.0","0.13"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2023-07-29T17:16:33.001+03:00","0.0","0.12"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2023-07-29T17:16:31.229+03:00","0.0","0.11"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2023-07-29T17:16:33.699+03:00","0.0","0.1"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2023-07-29T17:16:30.945+03:00","0.0","0.15"
"Random data provider strategy impl initialisation unit test","Podam should correctly generate HashMaps with Long as key type","SUCCESS","2023-07-29T17:16:35.374+03:00","0.0","0.11"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization disabled","SUCCESS","2023-07-29T17:16:32.757+03:00","0.0","0.11"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization enabled","SUCCESS","2023-07-29T17:16:32.053+03:00","0.0","0.14"
"Extensions test","Podam should create InputStream with the custom type manufacturer","SUCCESS","2023-07-29T17:16:37.332+03:00","0.0","0.12"
"Random data provider strategy impl initialisation unit test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2023-07-29T17:16:35.479+03:00","0.0","0.1"
"Extensions test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2023-07-29T17:16:37.049+03:00","0.0","0.16"
"Extensions test","Podam should create Timestamp with the custom type manufacturer","SUCCESS","2023-07-29T17:16:37.211+03:00","0.0","0.12"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2023-07-29T17:16:34.234+03:00","0.0","0.14"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2023-07-29T17:16:32.461+03:00","0.0","0.18"
"Constructors unit test","Podam should create instances of POJOs extending generic classes with matching generic placeholders","SUCCESS","2023-07-29T17:16:32.191+03:00","0.0","0.13"
"Extensions test","Podam should fill AttributeMetadata with the attribute name","SUCCESS","2023-07-29T17:16:37.453+03:00","0.0","0.14"
"Podam factory basic types test","Podam should fill CharSequence type","SUCCESS","2023-07-29T17:16:25.634+03:00","0.0","0.13"
"Podam factory basic types test","Podam should fill Java native types","SUCCESS","2023-07-29T17:16:26.055+03:00","0.0","0.12"
"Podam factory basic types test","Podam should fill Java string type","SUCCESS","2023-07-29T17:16:28.156+03:00","0.0","0.15"
"Podam factory basic types test","Podam should fill Java string type with full constructor","SUCCESS","2023-07-29T17:16:28.304+03:00","0.0","0.14"
"External factory unit test","Podam should fill POJOs and interface attributes if a full constructor sets the interface attribute value","SUCCESS","2023-07-29T17:16:38.594+03:00","0.0","0.11"
"Podam factory basic types test","Podam should fill POJOs with non default constructors","SUCCESS","2023-07-29T17:16:27.652+03:00","0.0","0.14"
"Abnormal pojos test","Podam should fill POJOs with protected, non default constructors","SUCCESS","2023-07-29T17:16:36.199+03:00","0.0","0.11"
"Abnormal pojos test","Podam should fill POJOs with public, non default constructors","SUCCESS","2023-07-29T17:16:35.959+03:00","0.0","0.12"
"Podam factory basic types test","Podam should fill array when invoking the factory population directly","SUCCESS","2023-07-29T17:16:27.493+03:00","0.0","0.16"
"Podam factory basic types test","Podam should fill arrays with elements","SUCCESS","2023-07-29T17:16:27.241+03:00","0.0","0.12"
"Abnormal pojos test","Podam should fill embedded abstract classes if a concrete type has been specified","SUCCESS","2023-07-29T17:16:36.079+03:00","0.0","0.12"
"Podam factory basic types test","Podam should fill in Maps of the containing class type","SUCCESS","2023-07-29T17:16:26.289+03:00","0.0","0.15"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2023-07-29T17:16:34.481+03:00","0.0","0.13"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency","SUCCESS","2023-07-29T17:16:28.011+03:00","0.0","0.15"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency and custom depth","SUCCESS","2023-07-29T17:16:25.761+03:00","0.0","0.14"
"Podam factory basic types test","Podam should fill in POJOs with Enums","SUCCESS","2023-07-29T17:16:26.175+03:00","0.0","0.11"
"Collections test","Podam should fill in POJOs with attributes containing wildcards","SUCCESS","2023-07-29T17:16:30.777+03:00","0.0","0.12"
"Podam factory basic types test","Podam should fill in a POJO with basic jvm types","SUCCESS","2023-07-29T17:16:26.559+03:00","0.0","0.13"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2023-07-29T17:16:34.369+03:00","0.0","0.11"
"Podam factory basic types test","Podam should fill in lists of the containing class type","SUCCESS","2023-07-29T17:16:27.793+03:00","0.0","0.22"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2023-07-29T17:16:34.609+03:00","0.0","0.13"
"Walk through example unit test","Podam should fill in the Address POJO correctly","SUCCESS","2023-07-29T17:16:44.609+03:00","0.0","0.12"
"Walk through example unit test","Podam should fill in the Bank Account POJO correctly","SUCCESS","2023-07-29T17:16:44.487+03:00","0.0","0.12"
"Walk through example unit test","Podam should fill in the Country POJO correctly","SUCCESS","2023-07-29T17:16:43.994+03:00","0.0","0.13"
"Walk through example unit test","Podam should fill in the Order POJO correctly","SUCCESS","2023-07-29T17:16:44.257+03:00","0.0","0.12"
"Podam factory basic types test","Podam should fill in wildcard Enum fields","SUCCESS","2023-07-29T17:16:26.685+03:00","0.0","0.13"
"Podam factory basic types test","Podam should fill recursive POJOs correctly, including all their fields","SUCCESS","2023-07-29T17:16:27.365+03:00","0.0","0.13"
"Podam factory basic types test","Podam should fill recursive POJOs correctly, including all their list fields","SUCCESS","2023-07-29T17:16:26.945+03:00","0.0","0.16"
"Podam factory basic types test","Podam should fill recursive POJOs when invoking the factory population directly","SUCCESS","2023-07-29T17:16:27.109+03:00","0.0","0.13"
"Walk through example unit test","Podam should fill the Article POJO correctly","SUCCESS","2023-07-29T17:16:44.379+03:00","0.0","0.11"
"Walk through example unit test","Podam should fill the Client POJO correctly","SUCCESS","2023-07-29T17:16:44.119+03:00","0.0","0.14"
"Walk through example unit test","Podam should fill the OrderItem POJO correctly","SUCCESS","2023-07-29T17:16:44.731+03:00","0.0","0.12"
"Abnormal pojos test","Podam should fill values invoking children setters accepting a type different from the parent type","SUCCESS","2023-07-29T17:16:35.599+03:00","0.0","0.12"
"Class info test","Podam should generate a ClassInfo which contains information for the setters contained in the POJO","SUCCESS","2023-07-29T17:16:29.232+03:00","0.0","0.14"
"Abnormal pojos test","Podam should generate a non null POJO for Abstract types with a concrete type","SUCCESS","2023-07-29T17:16:36.422+03:00","0.0","0.13"
"Randomness test","Podam should generate evenly distributed random integers","SUCCESS","2023-07-29T17:16:40.539+03:00","0.0","0.15"
"Annotations test","Podam should handle POJOs with annotated field and setter","SUCCESS","2023-07-29T17:16:21.769+03:00","0.0","0.11"
"Annotations test","Podam should handle POJOs with constructors that have one or more self references to the POJO class, provided the required constructor is annotated with @PodamConstructor","SUCCESS","2023-07-29T17:16:22.109+03:00","0.0","0.14"
"Annotations test","Podam should handle POJOs with multiple annotated fields and custom generic annotation strategy","SUCCESS","2023-07-29T17:16:21.991+03:00","0.0","0.11"
"Annotations test","Podam should handle POJOs with multiple annotated fields, ignoring any non Podam annotation ","SUCCESS","2023-07-29T17:16:20.895+03:00","0.0","0.15"
"Collections test","Podam should handle POJOs with no setters and collections in the constructor","SUCCESS","2023-07-29T17:16:29.816+03:00","0.0","0.2"
"Abnormal pojos test","Podam should handle POJOs with private constructors only","SUCCESS","2023-07-29T17:16:36.774+03:00","0.0","0.11"
"Abnormal pojos test","Podam should handle POJOs with self reference constructors but not default constructors without the need for the @PodamConstructor annotation","SUCCESS","2023-07-29T17:16:36.549+03:00","0.0","0.11"
"Singletons test","Podam should handle Singletons with parameters in the static method","SUCCESS","2023-07-29T17:16:40.694+03:00","0.0","0.13"
"Non EJB pojo test","Podam should handle attributes in accordance with custom Class Info Strategies","SUCCESS","2023-07-29T17:16:37.609+03:00","0.0","0.15"
"Inheritance test","Podam should handle basic inheritance scenarios","SUCCESS","2023-07-29T17:16:38.992+03:00","0.0","0.13"
"Boolean unit test","Podam should handle booleans correctly","SUCCESS","2023-07-29T17:16:25.065+03:00","0.0","0.17"
"Annotations test","Podam should handle both native and wrapped boolean values with @PodamBooleanValue annotation","SUCCESS","2023-07-29T17:16:20.763+03:00","0.0","0.13"
"Annotations test","Podam should handle both native and wrapped byte values with @PodamByteValue annotation","SUCCESS","2023-07-29T17:16:21.049+03:00","0.0","0.12"
"Annotations test","Podam should handle both native and wrapped char values with @PodamCharValue annotation","SUCCESS","2023-07-29T17:16:21.177+03:00","0.0","0.11"
"Annotations test","Podam should handle both native and wrapped double values with @PodamDoubleValue annotation","SUCCESS","2023-07-29T17:16:21.289+03:00","0.0","0.12"
"Annotations test","Podam should handle both native and wrapped float values with @PodamFloatValue annotation","SUCCESS","2023-07-29T17:16:21.877+03:00","0.0","0.11"
"Annotations test","Podam should handle both native and wrapped integer values with @PodamIntValue annotation","SUCCESS","2023-07-29T17:16:20.585+03:00","0.0","0.18"
"Annotations test","Podam should handle both native and wrapped long values with @PodamLongValue annotation","SUCCESS","2023-07-29T17:16:22.247+03:00","0.0","0.13"
"Annotations test","Podam should handle both native and wrapped short values with @PodamShortValue annotation","SUCCESS","2023-07-29T17:16:22.379+03:00","0.0","0.13"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2023-07-29T17:16:32.639+03:00","0.0","0.12"
"Constructors unit test","Podam should handle classes with read only maps having same key and value types","SUCCESS","2023-07-29T17:16:34.025+03:00","0.0","0.15"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2023-07-29T17:16:33.120+03:00","0.0","0.11"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2023-07-29T17:16:33.464+03:00","0.0","0.13"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2023-07-29T17:16:32.871+03:00","0.0","0.13"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2023-07-29T17:16:33.799+03:00","0.0","0.11"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2023-07-29T17:16:31.925+03:00","0.0","0.13"
"Annotations test","Podam should handle immutable POJOs annotated with @PodamConstructor","SUCCESS","2023-07-29T17:16:21.611+03:00","0.0","0.16"
"Collections test","Podam should handle immutable POJOs with generified collections in the constructor","SUCCESS","2023-07-29T17:16:30.012+03:00","0.0","0.13"
"Collections test","Podam should handle immutable Pojos with non generic collections","SUCCESS","2023-07-29T17:16:30.521+03:00","0.0","0.13"
"Podam factory basic types test","Podam should handle immutable non annotated POJOs","SUCCESS","2023-07-29T17:16:25.897+03:00","0.0","0.16"
"Collections test","Podam should handle optional list of strings","SUCCESS","2023-07-29T17:16:30.265+03:00","0.0","0.12"
"Collections test","Podam should handle standard collections","SUCCESS","2023-07-29T17:16:29.635+03:00","0.0","0.18"
"Inheritance test","Podam should handle the manufacturing of POJOs which inherit from other classes","SUCCESS","2023-07-29T17:16:39.244+03:00","0.0","0.11"
"Class unit test","Podam should handle the manufacturing of POJOs with generic types in constructor","SUCCESS","2023-07-29T17:16:25.257+03:00","0.0","0.14"
"Class unit test","Podam should handle the manufacturing of basic types","SUCCESS","2023-07-29T17:16:25.395+03:00","0.0","0.11"
"Class unit test","Podam should handle the manufacturing of generic POJOs","SUCCESS","2023-07-29T17:16:25.509+03:00","0.0","0.11"
"Inheritance test","Podam should manufacture all POJOs in a tree hierarchy","SUCCESS","2023-07-29T17:16:39.124+03:00","0.0","0.12"
"Inheritance test","Podam should manufacture attributes implementing Collection and Map interfaces","SUCCESS","2023-07-29T17:16:38.859+03:00","0.0","0.13"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2023-07-29T17:16:31.097+03:00","0.0","0.13"
"External factory unit test","Podam should not be able to create instances of an Abstract class even if the POJO has a full constructor","SUCCESS","2023-07-29T17:16:37.769+03:00","0.0","0.13"
"External factory unit test","Podam should not be able to create instances of an Abstract class if the external factory does not provide a concrete implementation","SUCCESS","2023-07-29T17:16:38.141+03:00","0.0","0.13"
"External factory unit test","Podam should not create instances of an interface when given an external factory which does not manufacture the concrete type","SUCCESS","2023-07-29T17:16:38.486+03:00","0.0","0.11"
"External factory unit test","Podam should not create instances of non-instantiable classes","SUCCESS","2023-07-29T17:16:37.899+03:00","0.0","0.12"
"Annotations test","Podam should not fill POJO's attributes annotated with @PodamExclude","SUCCESS","2023-07-29T17:16:19.619+03:00","0.0","0.68"
"Abnormal pojos test","Podam should return a null value for non instantiable POJOs","SUCCESS","2023-07-29T17:16:36.310+03:00","0.0","0.11"
"Class info test","Podam should return valid class info for POJOs with no attributes","SUCCESS","2023-07-29T17:16:28.549+03:00","0.0","0.13"
"Abnormal pojos test","Podam should throw an exception if a POJO contains invalid getters or setters","SUCCESS","2023-07-29T17:16:36.663+03:00","0.0","0.11"
"Multiple interfaces inheritance test","Podam will create an instance of a POJO but its interface types won't be instantiated","SUCCESS","2023-07-29T17:16:39.499+03:00","0.0","0.12"
"Annotations test","The @PodamCollection annotation should allow to set sizes on all collections and arrays","SUCCESS","2023-07-29T17:16:22.509+03:00","0.0","0.11"
"Class info test","The ClassInfo object created for a class should handle @PodamExcludeAnnotations","SUCCESS","2023-07-29T17:16:28.839+03:00","0.0","0.13"
"Random data provider strategy impl initialisation unit test","The Random Data Provider Strategy should be initialised correctly and allow for changes in the number of collection elements","SUCCESS","2023-07-29T17:16:34.759+03:00","0.0","0.12"
"External factory unit test","The management of external factories should be correct and chaining should work","SUCCESS","2023-07-29T17:16:38.019+03:00","0.0","0.12"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of XMLGregorianCalendar","SUCCESS","2023-07-29T17:16:45.115+03:00","0.0","0.11"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of the Duration class","SUCCESS","2023-07-29T17:16:44.869+03:00","0.0","0.14"
"XML datatype unit test","When given an external factory, Podam should be able to fill POJOs with instance attributes containing XMLGregorianCalendar and Duration","SUCCESS","2023-07-29T17:16:45.007+03:00","0.0","0.11"
"Memoization test","When memoization cache is cleared then objects should not be equal","SUCCESS","2023-07-29T17:16:39.964+03:00","0.0","0.12"
"Memoization test","When memoization is set to false Podam should return different instances for different invocations","SUCCESS","2023-07-29T17:16:39.739+03:00","0.0","0.12"
"Memoization test","When memoization is set to true Podam should return the same instance for different invocations","SUCCESS","2023-07-29T17:16:39.854+03:00","0.0","0.11"
"Validated pojo test","When the @Digits and @DecimalMin and @DecimalMax applied to the same field, Podam should use minimum requirements","SUCCESS","2023-07-29T17:16:42.974+03:00","0.0","0.36"
"Validated pojo test","When the @Size annotation doesn't have a max length specified, Podam should assign a sensible value","SUCCESS","2023-07-29T17:16:43.444+03:00","0.0","0.12"
"Validated pojo test","When the AnnotationStrategy and the TypeManufacturer are specified, the former has precedence","SUCCESS","2023-07-29T17:16:43.734+03:00","0.0","0.13"
