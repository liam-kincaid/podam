{"name":"podamShouldCreateInstancesOfGenericPojosWithFactoryMethodsWhenTheConcreteTypeIsKnown","id":"uk.co.jemos.podam.test.unit.features.constructors.ConstructorsUnitTest:podamShouldCreateInstancesOfGenericPojosWithFactoryMethodsWhenTheConcreteTypeIsKnown","testCaseName":"uk.co.jemos.podam.test.unit.features.constructors.ConstructorsUnitTest","testSteps":[{"number":1,"description":"Given a standard Podam Factory","duration":0,"startTime":1690640192457,"result":"SUCCESS","precondition":false},{"number":2,"description":"When I invoke the factory manufacturing for class uk.co.jemos.podam.test.dto.FactoryInstantiablePojo with specific types {class java.util.Date}","duration":0,"startTime":1690640192461,"result":"SUCCESS","precondition":false},{"number":3,"description":"Then the pojo uk.co.jemos.podam.test.dto.FactoryInstantiablePojoImpl@521f824a must be of the type class uk.co.jemos.podam.test.dto.FactoryInstantiablePojo","duration":0,"startTime":1690640192461,"result":"SUCCESS","precondition":false},{"number":4,"description":"Then the pojo Sat Jul 29 17:16:32 EEST 2023 must be of the type class java.util.Date","duration":0,"startTime":1690640192461,"result":"SUCCESS","precondition":false}],"userStory":{"id":"uk.co.jemos.podam.test.unit.features.constructors.ConstructorsUnitTest","storyName":"Constructors unit test","storyClassName":"uk.co.jemos.podam.test.unit.features.constructors.ConstructorsUnitTest","path":"uk.co.jemos.podam.test.unit.features.constructors","type":"stories"},"featureTag":{"name":"Constructors/Constructors unit test","type":"stories"},"title":"Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","tags":[{"name":"Constructors","type":"epics"},{"name":"Constructors/Constructors unit test","type":"stories"}],"startTime":1690640192325,"duration":136,"projectKey":"","manual":false,"testSource":"JUnit","result":"SUCCESS"}