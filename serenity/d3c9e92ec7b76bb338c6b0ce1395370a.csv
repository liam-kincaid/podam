"Story","Title","Result","Date","Stability","Duration (s)"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2023-07-29T17:16:33.912+03:00","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2023-07-29T17:16:31.442+03:00","0.0","0.12"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2023-07-29T17:16:33.595+03:00","0.0","0.1"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2023-07-29T17:16:32.325+03:00","0.0","0.14"
"Constructors unit test","Podam should be able to create instances of generic read only POJOs with factory methods when the concrete type is known","SUCCESS","2023-07-29T17:16:33.229+03:00","0.0","0.11"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2023-07-29T17:16:31.684+03:00","0.0","0.13"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2023-07-29T17:16:31.337+03:00","0.0","0.11"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2023-07-29T17:16:33.339+03:00","0.0","0.13"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2023-07-29T17:16:31.811+03:00","0.0","0.11"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2023-07-29T17:16:31.559+03:00","0.0","0.13"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2023-07-29T17:16:33.001+03:00","0.0","0.12"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2023-07-29T17:16:31.229+03:00","0.0","0.11"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2023-07-29T17:16:33.699+03:00","0.0","0.1"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2023-07-29T17:16:30.945+03:00","0.0","0.15"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization disabled","SUCCESS","2023-07-29T17:16:32.757+03:00","0.0","0.11"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization enabled","SUCCESS","2023-07-29T17:16:32.053+03:00","0.0","0.14"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2023-07-29T17:16:34.234+03:00","0.0","0.14"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2023-07-29T17:16:32.461+03:00","0.0","0.18"
"Constructors unit test","Podam should create instances of POJOs extending generic classes with matching generic placeholders","SUCCESS","2023-07-29T17:16:32.191+03:00","0.0","0.13"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2023-07-29T17:16:34.481+03:00","0.0","0.13"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2023-07-29T17:16:34.369+03:00","0.0","0.11"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2023-07-29T17:16:34.609+03:00","0.0","0.13"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2023-07-29T17:16:32.639+03:00","0.0","0.12"
"Constructors unit test","Podam should handle classes with read only maps having same key and value types","SUCCESS","2023-07-29T17:16:34.025+03:00","0.0","0.15"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2023-07-29T17:16:33.120+03:00","0.0","0.11"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2023-07-29T17:16:33.464+03:00","0.0","0.13"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2023-07-29T17:16:32.871+03:00","0.0","0.13"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2023-07-29T17:16:33.799+03:00","0.0","0.11"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2023-07-29T17:16:31.925+03:00","0.0","0.13"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2023-07-29T17:16:31.097+03:00","0.0","0.13"
